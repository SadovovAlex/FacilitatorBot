package main

import (
	"fmt"
	"log"
	"math/rand"
	"strconv"
	"strings"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// CommandHandler –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
func (b *Bot) handleCommand(message *tgbotapi.Message) {
	if !b.isChatAllowed(message.Chat.ID) {
		b.sendMessage(message.Chat.ID, fmt.Sprintf("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Ä–∞–±–æ—Ç–∞—é –≤ —ç—Ç–æ–º —á–∞—Ç–µ. %v", message.Chat.ID))
		return
	}

	if !b.canBotReadMessages(message.Chat.ID) {
		b.sendMessage(message.Chat.ID, "–ú–Ω–µ –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.")
		return
	}

	switch message.Command() {
	case "start":
		b.handleStart(message)
	case "help":
		b.handleHelp(message)
	case "ping", "–ø–∏–Ω–≥":
		b.handlePing(message)
	case "summary", "—Å–∞–º–º–∞—Ä–∏":
		b.handleAISummary(message, 0)
	case "stat", "stats":
		b.handleStats(message)
	case "aistat", "aistats":
		b.handleAdminCommand(message)
		return
	case "anekdot", "–∞–Ω–µ–∫–¥–æ—Ç":
		b.handleAnekdot(message)
	case "tema", "topic":
		b.handleTopic(message)
	case "clear", "–∑–∞–±—É–¥—å":
		b.handleClear(message)
	case "say", "—Å–∫–∞–∑–∞—Ç—å":
		b.handleAdminCommand(message)
		return
	case "img":
		b.handleGenImage(message)
	default:
		b.handleUnknownCommand(message)
	}
}

// handleStart –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
func (b *Bot) handleStart(message *tgbotapi.Message) {
	b.sendMessage(message.Chat.ID, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Ç–∫–∏—Ö –ø–µ—Ä–µ—Å–∫–∞–∑–æ–≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–π. –ò—Å–ø–æ–ª—å–∑—É–π /summary –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–¥–∫–∏.")
}

// handleHelp –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help
func (b *Bot) handleHelp(message *tgbotapi.Message) {
	b.sendMessage(message.Chat.ID, b.getHelp())
}

// handlePing –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /ping
func (b *Bot) handlePing(message *tgbotapi.Message) {
	commandReceiveTime := time.Now()
	processingTime := time.Since(commandReceiveTime)
	messageTime := time.Unix(int64(message.Date), 0)
	timeDiff := time.Since(messageTime)

	response := fmt.Sprintf(
		"üèì Pong!\n"+
			"‚è± –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: %d ms\n"+
			"üïí –í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞: %s\n"+
			"‚è≥ –ó–∞–¥–µ—Ä–∂–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: %s",
		processingTime.Milliseconds(),
		time.Now().Format("02.01.2006 15:04:05 MST"),
		formatDuration(timeDiff),
	)

	b.sendMessage(message.Chat.ID, response)
}

// handleSummary –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /summary
func (b *Bot) handleAISummary(message *tgbotapi.Message, count int) {
	chatID := message.Chat.ID

	// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–æ—Ä—É—Ç–∏–Ω—É –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∏
	b.startChatTyping(chatID)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —á–∞—Ç
	if !b.isChatAllowed(chatID) {
		b.sendMessage(chatID, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –º–µ–Ω—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏—Å—Ç–æ—Ä–∏–∏ —ç—Ç–æ–≥–æ —á–∞—Ç–∞.")
		return
	}

	if count == 0 {
		count = LIMIT_MSG
	}

	args := strings.Fields(message.CommandArguments())
	if len(args) > 0 {
		if num, err := strconv.Atoi(args[0]); err == nil && num > 0 {
			count = num
			if count > LIMIT_MSG {
				count = LIMIT_MSG
				b.sendMessage(message.Chat.ID, fmt.Sprintf("–Ø –ø–æ–º–Ω—é —Ç–æ–ª—å–∫–æ %d —Å–æ–æ–±—â–µ–Ω–∏–π...", LIMIT_MSG))
			}
		}
	}

	messages, err := b.getRecentMessages(chatID, count)
	if err != nil {
		log.Printf("[handleSummary] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: %v", err)
		b.sendMessage(chatID, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π.")
		return
	}

	if len(messages) == 0 {
		message := fmt.Sprintf("–ü–æ—Å–ª–µ–¥–Ω–∏–µ %v —á–∞—Å–æ–≤, —è –ø–æ—Ö–æ–∂–µ —Å–ø–∞–ª =)", CHECK_HOURS*-1)
		log.Println(message)
		b.sendMessage(chatID, message)
		return
	}

	// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
	var messagesText strings.Builder
	for _, msg := range messages {
		msgTime := time.Unix(msg.Timestamp, 0)
		// –°–æ–∑–¥–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å GMT+3
		gmt3 := time.FixedZone("GMT+3", 3*60*60)
		// –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å GMT+3
		msgTimeGMT3 := msgTime.In(gmt3)

		// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä
		messagesText.WriteString(fmt.Sprintf("[%s] %s(%v): %s\n",
			msgTimeGMT3.Format("15:04"),
			msg.UserFirstName,
			msg.Username,
			msg.Text))

		// // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
		// log.Printf("[%s] %s(%v): %s",
		// 	msgTimeGMT3.Format("15:04"),
		// 	msg.UserFirstName,
		// 	msg.Username,
		// 	msg.Text)
	}

	// –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–∫–∏ —Å –ø–æ–º–æ—â—å—é –ª–æ–∫–∞–ª—å–Ω–æ–π LLM
	summary, err := b.generateAiRequest(b.config.SystemPrompt, fmt.Sprintf(b.config.SummaryPrompt, messagesText.String()), message)
	if err != nil {
		log.Printf("[handleSummary] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–æ–¥–∫–∏: %v", err)
		b.sendMessage(chatID, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–¥–∫—É –æ–±—Å—É–∂–¥–µ–Ω–∏–π.")
		return
	}

	b.sendMessage(chatID, getRandomSummaryTitle()+"\n"+summary)
	b.lastSummary[chatID] = time.Now()

	// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–≤–æ–¥–∫–∏
	//description := b.config.ImagePrompt + "\n" + summary
	description := summary

	photo, err := b.GenerateImage(description, chatID, false)
	if err != nil {
		// –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
		log.Printf("[handleSummary] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: %v", err)
		return
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∫—Ä–∞—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º
	photo.Caption = ""
	b.tgBot.Send(photo)
	b.lastSummary[chatID] = time.Now()
}

// handleClear –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /clear
func (b *Bot) handleClear(message *tgbotapi.Message) {
	b.DeleteUserContext(message.Chat.ID, message.From.ID)
}

// handleUnknownCommand –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
func (b *Bot) handleUnknownCommand(message *tgbotapi.Message) {
	// –°–ø–∏—Å–æ–∫ —Å–ª—É—á–∞–π–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
	responses := []string{
		"–¢–∞–∫–æ–µ –Ω–µ –∑–Ω–∞—é.",
		"–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –º–Ω–µ –Ω–µ –∑–Ω–∞–∫–æ–º–∞.",
		"–ù–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å, —á—Ç–æ –≤—ã –æ—Ç –º–µ–Ω—è —Ö–æ—Ç–∏—Ç–µ.",
		"–•–º, –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É –≤ —Å–≤–æ–µ–º –º–µ–Ω—é.",
		"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
	}

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
	rand.Seed(time.Now().UnixNano())

	// –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –æ—Ç–≤–µ—Ç
	response := responses[rand.Intn(len(responses))]

	b.sendMessage(message.Chat.ID, response)
}

// handleMem –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /mem
func (b *Bot) handleGenImage(message *tgbotapi.Message) {
	chatID := message.Chat.ID

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
	isAdmin, err := b.IsUserAdmin(message.Chat.ID, message.From.ID)
	if err != nil {
		b.sendMessage(message.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
		return
	}
	if !isAdmin {
		b.sendMessage(message.Chat.ID, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ")
		return
	}

	//–ó–∞–ø—É—Å–∫–∞–µ–º –≥–æ—Ä—É—Ç–∏–Ω—É –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∏
	b.startChatTyping(chatID)

	// –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
	description := strings.TrimSpace(message.CommandArguments())
	if description == "" {
		b.sendMessage(chatID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /img")
		return
	}

	// // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å –ø–æ–º–æ—â—å—é LLM
	// promptImg, err := b.generateAiRequest("—Ç—ã –∏–ª–ª—é—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–∏—Å—É—é—â–∏–π A cartoonish black wolf with big, expressive eyes and sharp teeth, dynamically posing while holding random objects (e.g., a coffee cup, umbrella, or sandwich). The wolf looks slightly confused or nervous. Simple gray background with subtle rain streaks. Stylized as a humorous comic‚Äîflat colors, bold outlines, exaggerated expressions. Footer: small copyright text (—Å)wrwfx in English. ",
	// 	"–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –ø—Ä–æ–º–ø—Ç –¥–ª—è AI –ø–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ —Ç–µ–º–µ:"+description, message)
	// if err != nil {
	// 	log.Printf("[handleGenImage] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: %v", err)
	// 	b.sendMessage(chatID, "–ù–µ —É–¥–∞–ª–æ—Å—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–¥–Ω–µ–µ.")
	// 	return
	// }
	// log.Println("[handleGenImage]" + promptImg)

	// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
	photo, err := b.GenerateImage(b.config.ImagePrompt, chatID, false)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: %v", err)
		b.sendMessage(chatID, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–¥–Ω–µ–µ.")
		return
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
	_, err = b.tgBot.Send(*photo)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: %v", err)
		b.sendMessage(chatID, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
	}
}
