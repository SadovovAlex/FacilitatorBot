package main

// // handleGetTopAIUsers –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Ç–æ–∫–µ–Ω–æ–≤ –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
// func (b *Bot) handleGetTopAIUsers(message *tgbotapi.Message) {
// 	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É)
// 	// if !b.isUserAdmin(message.Chat.ID, message.From.ID) {
// 	// 	b.sendMessage(message.Chat.ID, "üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
// 	// 	return
// 	// }

// 	// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
// 	topUsers, err := b.GetTopUsersByTokenUsage(10, 30)
// 	if err != nil {
// 		log.Printf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: %v", err)
// 		b.sendMessage(message.Chat.ID, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
// 		return
// 	}

// 	if len(topUsers) == 0 {
// 		b.sendMessage(message.Chat.ID, "üìä –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ AI –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π.")
// 		return
// 	}

// 	// –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —á–∞—Ç—É
// 	chatStats, err := b.GetChatTokenUsage(message.Chat.ID, 30)
// 	if err != nil {
// 		log.Printf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–∞—Ç–∞: %v", err)
// 	}

// 	// –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
// 	var reply strings.Builder
// 	reply.WriteString("üìä <b>–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é AI</b>\n")
// 	reply.WriteString("‚è± –ü–µ—Ä–∏–æ–¥: –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π\n\n")

// 	// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —á–∞—Ç—É
// 	if chatStats.TotalTokens > 0 {
// 		reply.WriteString("üí¨ <b>–û–±—â–µ–µ –ø–æ —á–∞—Ç—É:</b>\n")
// 		reply.WriteString(fmt.Sprintf("ü™ô –¢–æ–∫–µ–Ω—ã: %d (–∑–∞–ø—Ä–æ—Å—ã: %d, –æ—Ç–≤–µ—Ç—ã: %d)\n",
// 			chatStats.TotalTokens, chatStats.PromptTokens, chatStats.CompletionTokens))
// 		reply.WriteString(fmt.Sprintf("üíµ –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $%.2f\n\n", chatStats.Cost))
// 	}

// 	reply.WriteString("üèÜ <b>–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n")

// 	for i, user := range topUsers {
// 		// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
// 		username, err := b.getUserByID(user.UserID)
// 		if err != nil || username == nil {
// 			continue
// 		}

// 		// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// 		reply.WriteString(fmt.Sprintf("%d. %s:\n", i+1, username))
// 		reply.WriteString(fmt.Sprintf("   ü™ô –¢–æ–∫–µ–Ω—ã: %d\n", user.TotalTokens))
// 		reply.WriteString(fmt.Sprintf("   üíµ –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $%.2f\n\n", user.Cost))
// 	}

// 	// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
// 	//reply.WriteString("\n‚ÑπÔ∏è –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /aitokens @username")

// 	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
// 	msg := tgbotapi.NewMessage(message.Chat.ID, reply.String())
// 	msg.ParseMode = "HTML"
// 	if _, err := b.tgBot.Send(msg); err != nil {
// 		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
// 	}
// }

// // handleStatsRequest –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º –∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—è–º –∏–∑ –ë–î
// func (b *Bot) handleStatsRequest(message *tgbotapi.Message) {
// 	chatID := message.Chat.ID

// 	// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
// 	var statsMsg strings.Builder
// 	fmt.Fprintf(&statsMsg, "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞:\n\n")

// 	// 1. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º
// 	var totalMessages int
// 	err := b.db.QueryRow("SELECT COUNT(*) FROM messages WHERE chat_id = ?", chatID).Scan(&totalMessages)
// 	if err == nil {
// 		fmt.Fprintf(&statsMsg, "üì® –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: %d\n", totalMessages)
// 	}

// 	// 2. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—è–º
// 	var totalThanks int
// 	err = b.db.QueryRow("SELECT COUNT(*) FROM mod_thanks WHERE chat_id = ?", chatID).Scan(&totalThanks)
// 	if err == nil {
// 		fmt.Fprintf(&statsMsg, "üôè –í—Å–µ–≥–æ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π: %d\n\n", totalThanks)
// 	}

// 	// 3. –¢–æ–ø –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π
// 	fmt.Fprintf(&statsMsg, "üèÜ –¢–æ–ø-5 —Å–∞–º—ã—Ö –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n")
// 	rows, err := b.db.Query(`
//         SELECT u.username, COUNT(*) as thanks_count
//         FROM mod_thanks t
//         JOIN users u ON t.from_user_id = u.id
//         WHERE t.chat_id = ?
//         GROUP BY t.from_user_id
//         ORDER BY thanks_count DESC
//         LIMIT 5
//     `, chatID)
// 	if err == nil {
// 		defer rows.Close()
// 		rank := 1
// 		for rows.Next() {
// 			var username string
// 			var count int
// 			if err := rows.Scan(&username, &count); err != nil {
// 				continue
// 			}
// 			if username == "" {
// 				username = "–ë–µ–∑ username"
// 			}
// 			fmt.Fprintf(&statsMsg, "%d. %s - %d —Ä–∞–∑\n", rank, username, count)
// 			rank++
// 		}
// 	}

// 	// 4. –¢–æ–ø –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π
// 	fmt.Fprintf(&statsMsg, "\nüíñ –¢–æ–ø-5 —Å–∞–º—ã—Ö —Ü–µ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n")
// 	rows, err = b.db.Query(`
//         SELECT u.username, COUNT(*) as thanks_received
//         FROM mod_thanks t
//         JOIN users u ON t.to_user_id = u.id
//         WHERE t.chat_id = ? AND t.to_user_id != 0
//         GROUP BY t.to_user_id
//         ORDER BY thanks_received DESC
//         LIMIT 5
//     `, chatID)
// 	if err == nil {
// 		defer rows.Close()
// 		rank := 1
// 		for rows.Next() {
// 			var username string
// 			var count int
// 			if err := rows.Scan(&username, &count); err != nil {
// 				continue
// 			}
// 			if username == "" {
// 				username = "–ë–µ–∑ username"
// 			}
// 			fmt.Fprintf(&statsMsg, "%d. %s - %d –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π\n", rank, username, count)
// 			rank++
// 		}
// 	}

// 	// 5. –ü–æ—Å–ª–µ–¥–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
// 	fmt.Fprintf(&statsMsg, "\nüÜï –ü–æ—Å–ª–µ–¥–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏:\n")
// 	rows, err = b.db.Query(`
//         SELECT u1.username, u2.username, t.text
//         FROM mod_thanks t
//         LEFT JOIN users u1 ON t.from_user_id = u1.id
//         LEFT JOIN users u2 ON t.to_user_id = u2.id
//         WHERE t.chat_id = ?
//         ORDER BY t.timestamp DESC
//         LIMIT 3
//     `, chatID)
// 	if err == nil {
// 		defer rows.Close()
// 		for rows.Next() {
// 			var fromUser, toUser, text string
// 			if err := rows.Scan(&fromUser, &toUser, &text); err != nil {
// 				continue
// 			}
// 			if fromUser == "" {
// 				fromUser = "–ê–Ω–æ–Ω–∏–º"
// 			}
// 			if toUser == "" {
// 				toUser = "–≤—Å–µ—Ö"
// 			}
// 			fmt.Fprintf(&statsMsg, "üëâ %s ‚Üí %s: %s\n", fromUser, toUser, truncateText(text, 20))
// 		}
// 	}

// 	// 6. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—É—Ç–∫–∏
// 	dayAgo := time.Now().Add(-24 * time.Hour).Unix()
// 	var lastDayThanks int
// 	err = b.db.QueryRow(`
//         SELECT COUNT(*)
//         FROM mod_thanks
//         WHERE chat_id = ? AND timestamp >= ?
//     `, chatID, dayAgo).Scan(&lastDayThanks)
// 	if err == nil {
// 		fmt.Fprintf(&statsMsg, "\nüïí –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π –∑–∞ —Å—É—Ç–∫–∏: %d", lastDayThanks)
// 	}

// 	b.sendMessage(chatID, statsMsg.String())
// }
